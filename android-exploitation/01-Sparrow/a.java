import java.util.Base64;
import java.io.PrintStream;
import java.nio.charset.StandardCharsets;
import javax.crypto.Cipher;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;

public class a {
    public String a(String str) {
        try {

            byte[] decodedBytes = Base64.getDecoder().decode("UHJlSGFja2FUaG9uMjAyMUNvbXBldGl0aW9u");
            String str2 = new String(decodedBytes);


            IvParameterSpec ivParameterSpec = new IvParameterSpec(new byte[]{1, 0, 3, 5, 9, 8, 4, 0, 3, 5, 0, 0, 8, 0, 7, 0});
            SecretKeySpec secretKeySpec = new SecretKeySpec(SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256").generateSecret(new PBEKeySpec(str2.toCharArray(), "Competition".getBytes(), 65536, 256)).getEncoded(), "AES");
            Cipher instance = Cipher.getInstance("AES/CBC/PKCS5Padding");

            instance.init(2, secretKeySpec, ivParameterSpec);

            decodedBytes = Base64.getDecoder().decode(str);
            byte[] decrypted_text = instance.doFinal( decodedBytes );
            return new String(decrypted_text);

        }
        
        catch (Exception e) {
            PrintStream printStream = System.out;
            StringBuilder f = f("Error while encrypting: ");
            f.append(e.toString());
            printStream.println(f.toString());
            return null;
        }
    }

    public static StringBuilder f(String str) {
        StringBuilder sb = new StringBuilder();
        sb.append(str);
        return sb;
    }

    public static void main(String[] args) {
        a newInstance = new a();
        System.out.println(newInstance.a("AKgfSjzoOdBzWXjZ2vi7RA=="));
        System.out.println(newInstance.a("9ZRGHyUkcMeZ1OvvG/zPxA=="));
    }
}
